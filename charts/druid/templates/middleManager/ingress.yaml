{{- if .Values.middleManager.ingress.enabled -}}
{{- $fullName := include "druid.middleManager.fullname" . -}}
{{- $ingressPath := .Values.middleManager.ingress.path -}}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "druid.labels" . | nindent 4 }}
    component: {{ .Values.middleManager.name }}
  {{- with .Values.middleManager.ingress.annotations }}
  annotations:
    {{- toYaml . | indent 4 }}
  {{- end }}
spec:
  {{- if and .Values.middleManager.ingress.ingressClassName (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.middleManager.ingress.ingressClassName }}
  {{- end }}
  {{- if .Values.middleManager.ingress.tls }}
  tls:
    {{- range .Values.middleManager.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.middleManager.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: {{ $ingressPath }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  name: http
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: http
              {{- end  }}
    {{- end }}
  {{- end }}
